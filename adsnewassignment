#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Dec  5 16:07:29 2022

@author: karthikshivaprasad
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb
def datareading():
    data=pd.read_csv("/Users/karthikshivaprasad/Downloads/vyshakpgm/electricity_oil.csv",skiprows=4)
    transpose=data.transpose()

    datacountry=data.loc[(data['Country Name']=='China') ]
    
    dataco=pd.read_csv("/Users/karthikshivaprasad/Downloads/vyshakpgm/co2emission.csv",skiprows=4)
    datacocountry=dataco.loc[(dataco['Country Name']=='South Africa') 
                         | (dataco['Country Name']=='United States') 
                         | (dataco['Country Name']=='India') 
                         | (dataco['Country Name']=='China') | 
                         (dataco['Country Name']=='Finland')]
    population=pd.read_csv("/Users/karthikshivaprasad/Downloads/vyshakpgm/populationtotal.csv",skiprows=4)
    populationcountry=population.loc[(dataco['Country Name']=='South Africa') 
                         | (dataco['Country Name']=='United States') 
                         | (dataco['Country Name']=='India') 
                         | (dataco['Country Name']=='China') | 
                         (dataco['Country Name']=='Finland')]
    fulldata=pd.read_csv("/Users/karthikshivaprasad/Downloads/vyshakpgm/fulldata.csv",skiprows=4)
    fulldatacountry=fulldata.loc[(fulldata['Country Name']=='India')] 
    #fulldatacountrych=fulldata.loc[(fulldata['Country Name']=='United Kingdom')] 
    '''chdata=fulldatacountrych.loc[(fulldatacountrych['Indicator Name']=='Urban population') 
                                         | (fulldatacountrych['Indicator Name']=='Access to electricity (% of population)')
                          |(fulldatacountrych['Indicator Name']=='Methane emissions (% change from 1990)')
                          |(fulldatacountrych['Indicator Name']=='Forest area (sq. km)')]'''
    threedatacountry=fulldatacountry.loc[(fulldatacountry['Indicator Name']=='Urban population') 
                                         | (fulldatacountry['Indicator Name']=='Access to electricity (% of population)')
                          |(fulldatacountry['Indicator Name']=='Methane emissions (% change from 1990)')
                          |(fulldatacountry['Indicator Name']=='Forest area (sq. km)')]
    #chdatayear=chdata[['1993','1994','1995','1996','1997','1998','1999','2000']]
    threedatayear=threedatacountry[['1993','1994','1995','1996','1997','1998','1999','2000']]
    newindex = threedatayear.reset_index(drop=True)
    trans=newindex.transpose()
    #chdatayearindex = chdatayear.reset_index(drop=True)
    #chdatatrns=chdatayearindex.transpose()
  
    return datacountry,datacocountry,populationcountry,trans

def fgsize():
    ''' The function is used to plot the figure in 13,7 size '''
    plt.figure(figsize=(15,8))
datacountry,datacocountry,populationcountry,trans=datareading()
def populationbar():
    plotpopulation=populationcountry.loc[:,'2015']
    countryname1=('CHINA','FINLAND','INDIA','UNITED STATES','SOUTH AFRICA')
    plt.figure()
    plt.title("TOTTAL POPULATION OF FIVE COUNTRIES IN 2015")
    clr=['skyblue','black','skyblue','skyblue','skyblue']
    plt.bar(countryname1,plotpopulation,color=clr,label='TOTTAL POPULATION')
    plt.xticks(rotation=30)
    plt.xlabel("COUNTRY NAME")
    plt.ylabel("NUMBER OF POPULATION")
    plt.legend()
    plt.show()
   
def pieplot():    
    plt.title("CO2 EMISSION", bbox={'facecolor': 'skyblue', 'alpha': 0.5, 'pad': 5})
    k=['CHINA','FINLAND','INDIA','UNITED STATES','SOUTH AFRICA']
    plt.pie(datacocountry['2015'],labels=k,autopct='%1.1f%%',explode=[0,0,0,0,0])
    
def heatplot():
    fgsize()
    #chdatatrns.columns=['urban population','methan emission','acces to elctricity','Forest area (sq. km)']
    trans.columns=['urban population','methan emission','acces to elctricity','Forest area (sq. km)']
    cor=trans.corr()
    #cor2=chdatatrns.corr()
    plt.figure()
    plt.title("HEAT MAP OF INDIA")
    sb.heatmap(data=cor,annot=True)
    plt.show()
def lineplot():
    chinaelectricityyear=datacountry.iloc[:,50:60]
    chinatrans=chinaelectricityyear.transpose()
    chinatrans.columns=['electricity']
    year=['2006','2007','2008','2009','2010','2011','2012','2013','2014','2015']
    plt.figure()
    plt.plot(year,chinatrans['electricity'],linestyle='--',marker='*',label='Electricity production')
    plt.xticks(rotation=30)
    plt.title("Electricity production from oil, gas and coal sources in china ")
    plt.xlabel("YEAR")
    plt.ylabel("ELECTRECITY PRODUCTION IN PERCENTAGE")
    plt.legend()
    plt.show()
#print(t)
#barplot()
lineplot()
populationbar()
pieplot()
heatplot()